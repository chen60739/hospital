<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hospital.dao.ProgrammeMapper">
  <resultMap id="BaseResultMap" type="com.example.hospital.model.Programme">
    <id column="programme_id" jdbcType="INTEGER" property="programmeId" />
    <result column="treatment" jdbcType="VARCHAR" property="treatment" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
    <result column="notice" jdbcType="VARCHAR" property="notice" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="programme_name" jdbcType="INTEGER" property="programmeName" />
  </resultMap>
  <resultMap id="super" type="com.example.hospital.dto.SuperProgramme" extends="BaseResultMap">
    <collection property="medicationList" ofType="com.example.hospital.model.Medication">
      <id column="m_id"  property="mId" />
      <result column="medication_id"  property="medicationId" />
      <result column="medication_dictionary_id"  property="medicationDictionaryId" />
    </collection>
    <collection property="testList" ofType="com.example.hospital.model.Test">
      <id column="t_id"  property="tId" />
      <result column="test_id"  property="testId" />
      <result column="test_dictionary_id"  property="testDictionaryId" />
    </collection>
    <collection property="checkedList" ofType="com.example.hospital.model.Checked">
      <id column="c_id"  property="cId" />
      <result column="checked_id"  property="checkedId" />
      <result column="checked_dictionary_id"  property="checkedDictionaryId" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    programme_id, treatment, operation, notice, department_id,
    programme_name
  </sql>
  <select id="selectProgrammeByDepartment" resultMap="super" parameterType="java.lang.Integer">
    select
--     p.programme_id,p.treatment,p.operation,p.notice
        *
    from `programme`
    where department_id=#{departmentId}
  </select>
  <select id="selectProgrammeName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
--     p.programme_id,p.treatment,p.operation,p.notice
        *
    from `programme`
    where programme_name=#{programmeName}
  </select>

<!--  <update id="updateProgrammeName" >-->
<!--    UPDATE programme set programme_name=#{programmeName} WHERE programme_id=#{programmeId}-->
<!--  </update>-->

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `programme`
    where programme_id = #{programmeId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `programme`
    where programme_id = #{programmeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.hospital.model.Programme">
    insert into `programme` (programme_id, treatment,
      operation, notice, department_id,
      programme_name)
    values (#{programmeId,jdbcType=INTEGER},  #{treatment,jdbcType=VARCHAR},
      #{operation,jdbcType=VARCHAR}, #{notice,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
      #{programmeName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertProgramme" parameterType="com.example.hospital.model.Programme"  useGeneratedKeys="true" keyProperty="programmeId">
    insert into `programme`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="treatment != null">
        treatment,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="notice != null">
        notice,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="programmeName != null">
        programme_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="treatment != null">
        #{treatment,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="notice != null">
        #{notice,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="programmeName != null">
        #{programmeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateProgramme" parameterType="com.example.hospital.model.Programme">
    update `programme`
    <set>
      <if test="treatment != null">
        treatment = #{treatment,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="notice != null">
        notice = #{notice,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="programmeName != null">
        programme_name = #{programmeName,jdbcType=VARCHAR},
      </if>
    </set>
    where programme_id = #{programmeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hospital.model.Programme">
    update `programme`
    set
      treatment = #{treatment,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      notice = #{notice,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      programme_name = #{programmeName,jdbcType=VARCHAR}
    where programme_id = #{programmeId,jdbcType=INTEGER}
  </update>
</mapper>