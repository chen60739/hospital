<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hospital.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.hospital.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_sex" jdbcType="TINYINT" property="userSex" />
    <result column="user_phone" jdbcType="CHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="occupation_id" jdbcType="INTEGER" property="occupationId" />

  </resultMap>
  <resultMap id="super" type="com.example.hospital.dto.SuperUser" extends="BaseResultMap">
    <result column="dictionary_name" jdbcType="VARCHAR" property="dictionaryName" />
  </resultMap>
  <sql id="Base_Column_List">
  user_id, user_name, user_pwd, user_sex, user_phone, user_email, department_id, role_id,
  create_time, modified_time, is_del, grade_id, group_id, occupation_id
</sql>

  <select id="getUser" resultMap="super">
    SELECT user_id, user_name,dictionary_name FROM `user` ,`dictionary`
    <where>
      department_id=dictionary_id
      <if test="dictionaryName!= null and dictionaryName != ''">
        and dictionary_id = #{dictionaryName}
      </if>
      <if test="userName!= null and userName != ''">
      and user_id = #{userName}
      </if>

    </where>
  </select>
  <!-- 查询单条回显数据-->
  <select id="selectOne" resultMap="super">
    SELECT user_id, user_name,dictionary_name FROM `user` ,`dictionary`
    <where>
      department_id=dictionary_id
      <if test="userName!= null and userName != ''">
        and user_id = #{userId}
      </if>

    </where>
  </select>


<!--查询医生-->
  <select id="selectUser" resultMap="BaseResultMap">
    SELECT *FROM  `user`
  </select>
<!--已经在科室的人-->
  <select id="getUserByName" resultMap="super">
    SELECT  user_name,dictionary_name FROM `user` ,`dictionary`
    <where>
      department_id=dictionary_id
      <if test="dictionaryName!= null and dictionaryName != ''">
        and dictionary_name = #{dictionaryName}
      </if>
      <if test="userName!= null and userName != ''">
        and user_name = #{userName}
      </if>
    </where>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `user`
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `user`
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.example.hospital.model.User">
    insert into `user` (user_id, user_name, user_pwd,
      user_sex, user_phone, user_email, 
      department_id, role_id, create_time, 
      modified_time, is_del, grade_id, 
      group_id, occupation_id)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=TINYINT}, #{userPhone,jdbcType=CHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifiedTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=TINYINT}, #{gradeId,jdbcType=INTEGER}, 
      #{groupId,jdbcType=INTEGER}, #{occupationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.hospital.model.User">
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="occupationId != null">
        occupation_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=TINYINT},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=CHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="occupationId != null">
        #{occupationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySe" parameterType="com.example.hospital.model.User">
    update `user`
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=TINYINT},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=CHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="occupationId != null">
        occupation_id = #{occupationId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hospital.model.User">
    update `user`
    set department_id = #{departmentId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>