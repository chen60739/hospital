<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hospital.dao.GroupUserRoleMapper">
  <resultMap id="BaseResultMap" type="com.example.hospital.model.GroupUserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_user_id" jdbcType="VARCHAR" property="groupUserId" />
    <result column="group_role_id" jdbcType="VARCHAR" property="groupRoleId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="group_occupation_id" jdbcType="INTEGER" property="groupOccupationId" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
  </resultMap>


  <resultMap id="super" type="com.example.hospital.dto.SupGroupUserRole" extends="BaseResultMap">
    <result column="dname" property="d1"></result>
    <result column="dname2" property="d2"></result>
    <result column="dname3" property="d3"></result>
    <result column="department_id" property="departmentid"></result>
    <result column="user_name" property="userName"></result>
    <result column="user_id" property="userId"></result>


    <association property="selectRole" javaType="com.example.hospital.model.SelectRole">
      <id column="select_role_id" jdbcType="INTEGER" property="selectRoleId" />
      <result column="role_id" jdbcType="INTEGER" property="roleId" />
      <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
      <result column="menu" jdbcType="VARCHAR" property="menu" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, group_user_id, group_role_id, group_id, group_occupation_id, grade_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from group_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.hospital.model.GroupUserRole">
    insert into group_user_role (id, group_user_id, group_role_id, 
      group_id, group_occupation_id, grade_id
      )
    values (#{id,jdbcType=INTEGER}, #{groupUserId,jdbcType=VARCHAR}, #{groupRoleId,jdbcType=VARCHAR}, 
      #{groupId,jdbcType=INTEGER}, #{groupOccupationId,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.hospital.model.GroupUserRole">
    insert into group_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupUserId != null">
        group_user_id,
      </if>
      <if test="groupRoleId != null">
        group_role_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupOccupationId != null">
        group_occupation_id,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupUserId != null">
        #{groupUserId,jdbcType=VARCHAR},
      </if>
      <if test="groupRoleId != null">
        #{groupRoleId,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupOccupationId != null">
        #{groupOccupationId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hospital.model.GroupUserRole">
    update group_user_role
    <set>
      <if test="groupUserId != null">
        group_user_id = #{groupUserId,jdbcType=VARCHAR},
      </if>
      <if test="groupRoleId != null">
        group_role_id = #{groupRoleId,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupOccupationId != null">
        group_occupation_id = #{groupOccupationId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hospital.model.GroupUserRole">
    update `group_user_role`
    set group_user_id = #{groupUserId,jdbcType=VARCHAR},
      group_role_id = #{groupRoleId,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      group_occupation_id = #{groupOccupationId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--权限管理页面   查询-->
  <select id="selectAllGroupUser" resultMap="super">
    select d.dictionary_name as dname,d2.dictionary_name as dname2,d3.dictionary_name as dname3,g.group_role_id,g.group_user_id,g.id,g.group_id,select_role.menu_name,user.department_id,user.user_name,user.user_id
    FROM `group_user_role` g,`user`,`dictionary` d,`dictionary` d2,`dictionary` d3,`select_role`
    where g.group_user_id=user.user_id
    AND g.group_role_id=d.dictionary_id
    AND g.grade_id=select_role.role_id
    AND g.group_occupation_id=d3.dictionary_id
    AND user.department_id=d2.dictionary_id
    AND g.is_del=0
    <if test="occupationId!=null and occupationId!=''">
      AND d.dictionary_name like CONCAT("%",#{occupationId},"%")
    </if>
  </select>

  <!--批量删除-->
  <update id="deleteById">
    UPDATE `group_user_role` SET is_del=1 WHERE id=#{ids}
  </update>
  <!--<select id="selectAllUser1" resultMap="super">
    select dictionary_name
       from user,dictionary
        where user.role_id=dictionary.dictionary_id
        AND user.is_del=0

  </select>-->
  <!--根据科室id  查询科室-->
  <select id="selectNameByDepartmentId" resultMap="super">
    SELECT  * FROM `user`,`dictionary`
    WHERE department_id=#{departmentId}
    AND user.department_id=dictionary.dictionary_id
    <if test="userName!=null and userName!=''">
      AND  user.user_name= #{userName}
    </if>
  </select>
  <!--添加用户-->
  <insert id="updateGroupUserRole">
   update `group_user_role` SET  group_user_id =#{groupUserId} where id=#{id}
  </insert>
  <insert id="updateGroupUserRole1">
    update `group_user_role` SET  group_role_id =#{groupRoleId} where id=#{id}
  </insert>

</mapper>