<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hospital.dao.OperativeInformationMapper">
  <resultMap id="BaseResultMap" type="com.example.hospital.model.OperativeInformation">
    <id column="operative_id" jdbcType="INTEGER" property="operativeId" />
    <result column="pat_id" jdbcType="INTEGER" property="patId" />
    <result column="operative_time" jdbcType="TIMESTAMP" property="operativeTime" />
    <result column="operative_form" jdbcType="INTEGER" property="operativeForm" />
    <result column="operator" jdbcType="INTEGER" property="operator" />
  </resultMap>
  <sql id="Base_Column_List">
    operative_id, pat_id, operative_time, operative_form, operator
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operative_information
    where operative_id = #{operativeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operative_information
    where operative_id = #{operativeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.hospital.model.OperativeInformation">
    insert into operative_information (operative_id, pat_id, operative_time, 
      operative_form, operator)
    values (#{operativeId,jdbcType=INTEGER}, #{patId,jdbcType=INTEGER}, #{operativeTime,jdbcType=TIMESTAMP}, 
      #{operativeForm,jdbcType=INTEGER}, #{operator,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.hospital.model.OperativeInformation">
    insert into operative_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operativeId != null">
        operative_id,
      </if>
      <if test="patId != null">
        pat_id,
      </if>
      <if test="operativeTime != null">
        operative_time,
      </if>
      <if test="operativeForm != null">
        operative_form,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operativeId != null">
        #{operativeId,jdbcType=INTEGER},
      </if>
      <if test="patId != null">
        #{patId,jdbcType=INTEGER},
      </if>
      <if test="operativeTime != null">
        #{operativeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operativeForm != null">
        #{operativeForm,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hospital.model.OperativeInformation">
    update operative_information
    <set>
      <if test="patId != null">
        pat_id = #{patId,jdbcType=INTEGER},
      </if>
      <if test="operativeTime != null">
        operative_time = #{operativeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operativeForm != null">
        operative_form = #{operativeForm,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=INTEGER},
      </if>
    </set>
    where operative_id = #{operativeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hospital.model.OperativeInformation">
    update operative_information
    set pat_id = #{patId,jdbcType=INTEGER},
      operative_time = #{operativeTime,jdbcType=TIMESTAMP},
      operative_form = #{operativeForm,jdbcType=INTEGER},
      operator = #{operator,jdbcType=INTEGER}
    where operative_id = #{operativeId,jdbcType=INTEGER}
  </update>
</mapper>