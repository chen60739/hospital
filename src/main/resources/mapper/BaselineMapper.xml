<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hospital.dao.BaselineMapper">
  <resultMap id="BaseResultMap" type="com.example.hospital.model.Baseline">
    <id column="baseline_id" jdbcType="INTEGER" property="baselineId" />
    <result column="rule_id" jdbcType="INTEGER" property="ruleId" />
    <result column="baseline_pat_id" jdbcType="INTEGER" property="baselinePatId" />
  </resultMap>
  <sql id="Base_Column_List">
    baseline_id, rule_id, baseline_pat_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `baseline`
    where baseline_id = #{baselineId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `baseline`
    where baseline_id = #{baselineId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.hospital.model.Baseline">
    insert into `baseline` (baseline_id, rule_id, baseline_pat_id
      )
    values (#{baselineId,jdbcType=INTEGER}, #{ruleId,jdbcType=INTEGER}, #{baselinePatId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.hospital.model.Baseline">
    insert into `baseline`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="baselineId != null">
        baseline_id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="baselinePatId != null">
        baseline_pat_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="baselineId != null">
        #{baselineId,jdbcType=INTEGER},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="baselinePatId != null">
        #{baselinePatId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hospital.model.Baseline">
    update `baseline`
    <set>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="baselinePatId != null">
        baseline_pat_id = #{baselinePatId,jdbcType=INTEGER},
      </if>
    </set>
    where baseline_id = #{baselineId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hospital.model.Baseline">
    update `baseline`
    set rule_id = #{ruleId,jdbcType=INTEGER},
      baseline_pat_id = #{baselinePatId,jdbcType=INTEGER}
    where baseline_id = #{baselineId,jdbcType=INTEGER}
  </update>
</mapper>